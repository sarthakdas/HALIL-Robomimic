
============= Initialized Observation Utils with Obs Spec =============

using obs modality: low_dim with keys: ['robot0_eef_pos', 'object', 'robot0_eef_quat', 'robot0_gripper_qpos']
using obs modality: rgb with keys: []
using obs modality: depth with keys: []
using obs modality: scan with keys: []

============= Loaded Environment Metadata =============
obs key object with shape (10,)
obs key robot0_eef_pos with shape (3,)
obs key robot0_eef_quat with shape (4,)
obs key robot0_gripper_qpos with shape (2,)
[robosuite WARNING] No private macro file found! (macros.py:53)
[robosuite WARNING] It is recommended to use a private macro file (macros.py:54)
[robosuite WARNING] To setup, run: python /opt/miniconda3/envs/robomimic_venv/lib/python3.8/site-packages/robosuite/scripts/setup_macros.py (macros.py:55)
Created environment with name Lift
Action size is 7
Lift
{
    "camera_depths": false,
    "camera_heights": 84,
    "camera_widths": 84,
    "control_freq": 20,
    "controller_configs": {
        "control_delta": true,
        "damping": 1,
        "damping_limits": [
            0,
            10
        ],
        "impedance_mode": "fixed",
        "input_max": 1,
        "input_min": -1,
        "interpolation": null,
        "kp": 150,
        "kp_limits": [
            0,
            300
        ],
        "orientation_limits": null,
        "output_max": [
            0.05,
            0.05,
            0.05,
            0.5,
            0.5,
            0.5
        ],
        "output_min": [
            -0.05,
            -0.05,
            -0.05,
            -0.5,
            -0.5,
            -0.5
        ],
        "position_limits": null,
        "ramp_ratio": 0.2,
        "type": "OSC_POSE",
        "uncouple_pos_ori": true
    },
    "has_offscreen_renderer": true,
    "has_renderer": false,
    "ignore_done": true,
    "render_gpu_device_id": 0,
    "reward_shaping": false,
    "robots": [
        "Panda"
    ],
    "use_camera_obs": false,
    "use_object_obs": true
}

OpenAI client initialized

============= Model Summary =============
KAT (
  ModuleDict()
)

SequenceDataset: loading dataset into memory...
  0%|          | 0/200 [00:00<?, ?it/s] 12%|#1        | 23/200 [00:00<00:00, 225.95it/s] 23%|##3       | 46/200 [00:00<00:00, 217.32it/s] 38%|###8      | 77/200 [00:00<00:00, 256.74it/s] 52%|#####2    | 104/200 [00:00<00:00, 259.62it/s] 66%|######5   | 131/200 [00:00<00:00, 258.38it/s] 80%|########  | 160/200 [00:00<00:00, 267.19it/s] 95%|#########5| 190/200 [00:00<00:00, 276.66it/s]100%|##########| 200/200 [00:00<00:00, 265.01it/s]
SequenceDataset: caching get_item calls...
  0%|          | 0/9666 [00:00<?, ?it/s] 11%|#1        | 1064/9666 [00:00<00:00, 10639.38it/s] 22%|##2       | 2146/9666 [00:00<00:00, 10744.94it/s] 35%|###4      | 3350/9666 [00:00<00:00, 11334.30it/s] 46%|####6     | 4484/9666 [00:00<00:00, 10683.56it/s] 59%|#####8    | 5671/9666 [00:00<00:00, 11094.00it/s] 72%|#######2  | 7007/9666 [00:00<00:00, 11843.39it/s] 85%|########5 | 8227/9666 [00:00<00:00, 11953.39it/s] 98%|#########7| 9427/9666 [00:00<00:00, 11335.08it/s]100%|##########| 9666/9666 [00:00<00:00, 11138.24it/s]

============= Training Dataset =============
SequenceDataset (
	path=tmp/lift.hdf5
	obs_keys=('object', 'robot0_eef_pos', 'robot0_eef_quat', 'robot0_gripper_qpos')
	seq_length=1
	filter_key=none
	frame_stack=1
	pad_seq_length=True
	pad_frame_stack=True
	goal_mode=none
	cache_mode=all
	num_demos=200
	num_sequences=9666
)

**************************************************
Warnings generated by robomimic have been duplicated here (from above) for convenience. Please check them carefully.
**************************************************

  0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  1.72it/s]100%|##########| 1/1 [00:00<00:00,  1.72it/s]
Train Epoch 1
{
    "Time_Data_Loading": 0.00040286779403686523,
    "Time_Epoch": 0.010079518953959147,
    "Time_Log_Info": 1.986821492513021e-07,
    "Time_Process_Batch": 5.458196004231771e-05,
    "Time_Train_Batch": 0.00924307902654012
}
video writes to /Users/sarthakdas/Library/Mobile Documents/com~apple~CloudDocs/ComputerScience/Masters/RobotGym/robomimic/robomimic/../kat_trained_models/test/20240711174750/videos/Lift_epoch_1.mp4
rollout: env=Lift, horizon=400, use_goals=False, num_episodes=1
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:01<?, ?it/s]
Traceback (most recent call last):
  File "train.py", line 427, in <module>
    main(args)
  File "train.py", line 378, in main
    train(config, device=device)
  File "train.py", line 263, in train
    all_rollout_logs, video_paths = TrainUtils.rollout_with_stats(
  File "/Users/sarthakdas/Library/Mobile Documents/com~apple~CloudDocs/ComputerScience/Masters/RobotGym/robomimic/robomimic/utils/train_utils.py", line 359, in rollout_with_stats
    rollout_info = run_rollout(
  File "/Users/sarthakdas/Library/Mobile Documents/com~apple~CloudDocs/ComputerScience/Masters/RobotGym/robomimic/robomimic/utils/train_utils.py", line 208, in run_rollout
    policy.start_episode()
  File "/Users/sarthakdas/Library/Mobile Documents/com~apple~CloudDocs/ComputerScience/Masters/RobotGym/robomimic/robomimic/algo/algo.py", line 487, in start_episode
    self.policy.reset()
  File "/Users/sarthakdas/Library/Mobile Documents/com~apple~CloudDocs/ComputerScience/Masters/RobotGym/robomimic/robomimic/algo/kat.py", line 408, in reset
    time.sleep(60)
KeyboardInterrupt
